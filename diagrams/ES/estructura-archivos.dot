digraph EstructuraArchivos {
    rankdir=LR;
    
    graph [
        fontname="Arial, sans-serif"
        fontsize=12
        bgcolor="#f8f9fa"
        style=filled
        pad=0.5
        nodesep=0.4
        ranksep=0.8
    ];
    
    node [
        fontname="Arial, sans-serif"
        fontsize=9
        style=filled
        shape=box
        margin=0.05
    ];
    
    edge [
        fontname="Arial, sans-serif"
        fontsize=8
        color="#666666"
    ];

    // Ra√≠z del proyecto
    raiz [
        label="üìÅ prueba-clean-architecture\n(Ra√≠z del Proyecto)"
        fillcolor="#e3f2fd"
        color="#1976d2"
        fontsize=11
    ];

    // Src principal
    src [
        label="üìÅ src"
        fillcolor="#f3e5f5"
        color="#7b1fa2"
        fontsize=10
    ];

    // Capa de Dominio
    dominio [
        label="üìÅ domain\nüß† L√≥gica Central de Negocio"
        fillcolor="#fff3e0"
        color="#f57c00"
    ];

    entidades_dominio [
        label="üìÅ entities\n‚îú‚îÄ‚îÄ Product.ts ‚≠ê\n‚îú‚îÄ‚îÄ User.ts ‚≠ê"
        fillcolor="#ffe0b2"
        shape=note
    ];

    objetos_valor_dominio [
        label="üìÅ value-objects\n‚îú‚îÄ‚îÄ Email.ts üíé\n‚îú‚îÄ‚îÄ Money.ts üíé"
        fillcolor="#ffe0b2"
        shape=note
    ];

    repositorios_dominio [
        label="üìÅ repositories\n‚îú‚îÄ‚îÄ IProductRepository.ts üìã\n‚îú‚îÄ‚îÄ IUserRepository.ts üìã"
        fillcolor="#ffe0b2"
        shape=note
    ];

    eventos_dominio [
        label="üìÅ events\n‚îú‚îÄ‚îÄ DomainEvent.ts üì°\n‚îú‚îÄ‚îÄ EventBus.ts üöå"
        fillcolor="#ffe0b2"
        shape=note
    ];

    errores_dominio [
        label="üìÑ errors/DomainError.ts\n‚ö†Ô∏è Excepciones de Negocio"
        fillcolor="#ffe0b2"
        shape=note
    ];

    // Capa de Aplicaci√≥n
    aplicacion [
        label="üìÅ application\nüè¢ Casos de Uso y DTOs"
        fillcolor="#e8f5e8"
        color="#388e3c"
    ];

    casos_uso_aplicacion [
        label="üìÅ use-cases\n‚îú‚îÄ‚îÄ CreateProduct.ts ‚öôÔ∏è\n‚îú‚îÄ‚îÄ GetAllProducts.ts ‚öôÔ∏è\n‚îú‚îÄ‚îÄ UpdateProduct.ts ‚öôÔ∏è\n‚îú‚îÄ‚îÄ CreateUser.ts ‚öôÔ∏è\n‚îú‚îÄ‚îÄ ActivateUser.ts ‚öôÔ∏è\n‚îî‚îÄ‚îÄ ... (14 archivos total)"
        fillcolor="#c8e6c9"
        shape=note
    ];

    dtos_aplicacion [
        label="üìÅ dtos\n‚îú‚îÄ‚îÄ CreateProductDTO.ts üì®\n‚îú‚îÄ‚îÄ ProductResponseDTO.ts üì§\n‚îú‚îÄ‚îÄ CreateUserDTO.ts üì®\n‚îú‚îÄ‚îÄ UserResponseDTO.ts üì§\n‚îî‚îÄ‚îÄ UpdateXXXDTO.ts archivos"
        fillcolor="#c8e6c9"
        shape=note
    ];

    interfaces_aplicacion [
        label="üìÅ interfaces\n‚îú‚îÄ‚îÄ ICreateProduct.ts üîå"
        fillcolor="#c8e6c9"
        shape=note
    ];

    // Capa de Adaptadores
    adaptadores [
        label="üìÅ adapters\nüîå Interfaces Externas"
        fillcolor="#f3e5f5"
        color="#7b1fa2"
    ];

    api_adaptadores [
        label="üìÅ api/controllers\n‚îú‚îÄ‚îÄ ProductController.ts üéØ\n‚îú‚îÄ‚îÄ UserController.ts üéØ"
        fillcolor="#e1bee7"
        shape=note
    ];

    db_adaptadores [
        label="üìÅ db"
        fillcolor="#e1bee7"
    ];

    entidades_db [
        label="üìÅ db/entities\n‚îú‚îÄ‚îÄ ProductEntity.ts üìä\n‚îú‚îÄ‚îÄ UserEntity.ts üìä"
        fillcolor="#d1c4e9"
        shape=note
    ];

    repositorios_db [
        label="üìÅ db/repositories\n‚îú‚îÄ‚îÄ TypeOrmProductRepository.ts üóÉÔ∏è\n‚îú‚îÄ‚îÄ TypeOrmUserRepository.ts üóÉÔ∏è"
        fillcolor="#d1c4e9"
        shape=note
    ];

    mapeadores_db [
        label="üìÅ db/mappers\n‚îú‚îÄ‚îÄ ProductMapper.ts üîÑ\n‚îú‚îÄ‚îÄ UserMapper.ts üîÑ"
        fillcolor="#d1c4e9"
        shape=note
    ];

    // Capa de Infraestructura
    infraestructura [
        label="üìÅ infrastructure\nüîß Configuraci√≥n del Framework"
        fillcolor="#e8eaf6"
        color="#3f51b5"
    ];

    config_infraestructura [
        label="üìÅ config\n‚îú‚îÄ‚îÄ database.config.ts ‚öôÔ∏è"
        fillcolor="#c5cae9"
        shape=note
    ];

    modulos_infraestructura [
        label="üìÅ modules\n‚îú‚îÄ‚îÄ ProductModule.ts üì¶\n‚îú‚îÄ‚îÄ UserModule.ts üì¶"
        fillcolor="#c5cae9"
        shape=note
    ];

    // Utilidades compartidas
    compartido [
        label="üìÅ shared\nüõ†Ô∏è Utilidades Comunes"
        fillcolor="#f1f8e9"
        color="#689f38"
    ];

    utils_compartido [
        label="üìÅ utils\n‚îú‚îÄ‚îÄ IdGenerator.ts üÜî"
        fillcolor="#dcedc8"
        shape=note
    ];

    // Archivos principales
    archivos_principales [
        label="üìÑ Archivos Principales\n‚îú‚îÄ‚îÄ main.ts üöÄ\n‚îú‚îÄ‚îÄ app.module.ts üì±\n‚îú‚îÄ‚îÄ app.controller.ts üéÆ\n‚îî‚îÄ‚îÄ app.service.ts üîß"
        fillcolor="#f3e5f5"
        shape=note
    ];

    // Estructura de pruebas
    pruebas [
        label="üìÅ test\nüß™ Suite de Pruebas"
        fillcolor="#f3e5f5"
        color="#7b1fa2"
    ];

    pruebas_unitarias [
        label="üìÅ unit\n‚îú‚îÄ‚îÄ domain/ üß†\n‚îÇ   ‚îú‚îÄ‚îÄ entities/\n‚îÇ   ‚îú‚îÄ‚îÄ value-objects/ üíé\n‚îÇ   ‚îî‚îÄ‚îÄ events/ üì°\n‚îú‚îÄ‚îÄ application/ üè¢\n‚îÇ   ‚îî‚îÄ‚îÄ use-cases/\n‚îî‚îÄ‚îÄ adapters/ üîå\n    ‚îî‚îÄ‚îÄ db/mappers/"
        fillcolor="#e1bee7"
        shape=note
    ];

    pruebas_e2e [
        label="üìÅ e2e\n‚îú‚îÄ‚îÄ app.e2e-spec.ts üîó"
        fillcolor="#e1bee7"
        shape=note
    ];

    // Archivos de configuraci√≥n
    archivos_config [
        label="üìÑ Archivos de Configuraci√≥n\n‚îú‚îÄ‚îÄ package.json üì¶\n‚îú‚îÄ‚îÄ tsconfig.json ‚öôÔ∏è\n‚îú‚îÄ‚îÄ nest-cli.json üê¶\n‚îú‚îÄ‚îÄ docker-compose.yml üê≥\n‚îú‚îÄ‚îÄ Dockerfile üìã\n‚îú‚îÄ‚îÄ .env / .env.example üîê\n‚îî‚îÄ‚îÄ README.md üìñ"
        fillcolor="#f5f5f5"
        shape=note
    ];

    // Documentaci√≥n
    documentacion [
        label="üìÑ Documentaci√≥n\n‚îú‚îÄ‚îÄ README_CLEAN_ARCH.md üìö\n‚îú‚îÄ‚îÄ CLEAN_ARCHITECTURE_IMPROVEMENTS.md üìà\n‚îú‚îÄ‚îÄ DEPLOYMENT_SUMMARY.md üöÄ\n‚îî‚îÄ‚îÄ TEST_SUMMARY.md üß™"
        fillcolor="#e8f5e8"
        shape=note
    ];

    // Conexiones - Jerarqu√≠a de archivos
    raiz -> src;
    raiz -> pruebas;
    raiz -> archivos_config;
    raiz -> documentacion;

    // Estructura de src
    src -> dominio;
    src -> aplicacion;
    src -> adaptadores;
    src -> infraestructura;
    src -> compartido;
    src -> archivos_principales;

    // Estructura de dominio
    dominio -> entidades_dominio;
    dominio -> objetos_valor_dominio;
    dominio -> repositorios_dominio;
    dominio -> eventos_dominio;
    dominio -> errores_dominio;

    // Estructura de aplicaci√≥n
    aplicacion -> casos_uso_aplicacion;
    aplicacion -> dtos_aplicacion;
    aplicacion -> interfaces_aplicacion;

    // Estructura de adaptadores
    adaptadores -> api_adaptadores;
    adaptadores -> db_adaptadores;
    db_adaptadores -> entidades_db;
    db_adaptadores -> repositorios_db;
    db_adaptadores -> mapeadores_db;

    // Estructura de infraestructura
    infraestructura -> config_infraestructura;
    infraestructura -> modulos_infraestructura;

    // Estructura compartida
    compartido -> utils_compartido;

    // Estructura de pruebas
    pruebas -> pruebas_unitarias;
    pruebas -> pruebas_e2e;

    // Relaciones de dependencias (coloreadas por capa)
    api_adaptadores -> casos_uso_aplicacion [label="llama" color="#1976d2" style=dashed];
    casos_uso_aplicacion -> entidades_dominio [label="crea" color="#388e3c" style=dashed];
    casos_uso_aplicacion -> repositorios_dominio [label="depende" color="#388e3c" style=dashed];
    repositorios_db -> repositorios_dominio [label="implementa" color="#7b1fa2" style=dashed];
    mapeadores_db -> entidades_dominio [label="convierte" color="#7b1fa2" style=dashed];
    entidades_dominio -> objetos_valor_dominio [label="usa" color="#f57c00" style=dashed];

    // T√≠tulo
    labelloc="t";
    label=<<B>Estructura de Archivos del Proyecto - Arquitectura Limpia</B><BR/>
    <I>Organizaci√≥n del Proyecto NestJS TypeScript</I><BR/>
    <FONT POINT-SIZE="10">Total: ~50+ archivos organizados por capas arquitect√≥nicas</FONT>>;
    fontsize=16;
}
